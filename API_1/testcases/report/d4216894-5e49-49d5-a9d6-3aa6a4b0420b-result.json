{"name": "test_login[cases4]", "status": "broken", "statusDetails": {"message": "PermissionError: [Errno 13] Permission denied: 'E:\\\\workspace\\\\python_15\\\\API_1\\\\data\\\\cases.xlsx'", "trace": "self = <API_1.testcases.test_login.TestLogin object at 0x000000000D1AD048>, cases = <API_1.common.do_excel.Case object at 0x000000000CFB2198>\n\n    @allure.story('测试场景')\n    @allure.suite('登录测试用例')\n    @pytest.mark.parametrize('cases',case)\n    def test_login(self,cases):\n        # global loger\n        allure.attach('请求参数：{}'.format(cases.data))\n        self.loger.loggers('INFO','请求方式:{};请求地址:{};请求参数:{}'.format(cases.method,cases.url,cases.data))\n        resp=self.http.requests(cases.method,url=cases.url,data=eval(cases.data))\n        allure.attach('响应结果:{}'.format(resp.text))\n        cases.actual=json.loads(resp.text)\n        self.loger.loggers('INFO','响应报文:{}'.format(cases.actual))\n        try:\n            assert (eval(cases.expected)==cases.actual)\n            cases.result='PASS'\n        except AssertionError as e:\n            cases.result='FAIL'\n            self.loger.loggers('ERROR','报错原因:{}'.format(e))\n            raise e\n        finally:\n            allure.attach('测试结果:{}'.format(cases.result))\n            # ex = DoExcel(path.case_file, 'login')\n>           self.ex.write_excel(int(cases.case_id)+1,str(cases.actual),cases.result)\n\ntest_login.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\do_excel.py:42: in write_excel\n    self.wb.save(self.file_name)\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\openpyxl\\workbook\\workbook.py:396: in save\n    save_workbook(self, filename)\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\openpyxl\\writer\\excel.py:292: in save_workbook\n    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>, file = 'E:\\\\workspace\\\\python_15\\\\API_1\\\\data\\\\cases.xlsx', mode = 'w', compression = 8, allowZip64 = True\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   PermissionError: [Errno 13] Permission denied: 'E:\\\\workspace\\\\python_15\\\\API_1\\\\data\\\\cases.xlsx'\n\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\zipfile.py:1090: PermissionError"}, "attachments": [{"source": "df7d1b47-3ebd-4480-9658-482ba26dfc5e-attachment.attach"}, {"source": "e621b087-b422-46ba-8340-176d2969919c-attachment.attach"}, {"source": "e36387aa-2674-46ab-85d2-a59682bb852e-attachment.attach"}, {"name": "log", "source": "2c86deb2-5882-49f2-971f-877ecd704e7e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cases", "value": "<API_1.common.do_excel.Case object at 0x000000000CFB2198>"}], "start": 1583908502393, "stop": 1583908502584, "uuid": "08c00923-ea3d-415d-b945-5b54356de145", "historyId": "2df54c673b01e6577e97f768ab545417", "testCaseId": "b62a022e3184708d2d40012e446c9b1d", "fullName": "test_login.TestLogin#test_login", "labels": [{"name": "suite", "value": "登录测试用例"}, {"name": "feature", "value": "登录接口"}, {"name": "story", "value": "测试场景"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "WIN-SE0CJLLHE5T"}, {"name": "thread", "value": "2840-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}